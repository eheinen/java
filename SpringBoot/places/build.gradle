buildscript {
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'
apply plugin: 'spring-boot' 
apply plugin: 'io.spring.dependency-management' 
apply plugin: 'war'


war {
    baseName = 'richard'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
}

configurations {
    providedRuntime
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-mongodb")
    compile("org.springframework.boot:spring-boot-starter-mail")
    compile("org.springframework.boot:spring-boot-starter-web")
    providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")
    compile('org.apache.commons:commons-lang3:3.4')
    
    compile 'de.codecentric:spring-boot-admin-server:1.2.2'
 	compile 'de.codecentric:spring-boot-admin-server-ui:1.2.2'
	compile 'de.codecentric:spring-boot-admin-starter-client:1.2.2'
    compile 'org.springframework.cloud:spring-cloud-starter-eureka:1.0.3.RELEASE'
    
    testCompile("org.springframework.boot:spring-boot-starter-test") 
    testCompile("cz.jirutka.spring:embedmongo-spring:1.3.1")
    testCompile("com.jayway.restassured:rest-assured:2.4.1")
    
    compile 'de.codecentric:spring-boot-admin-server:1.2.2'
	compile 'de.codecentric:spring-boot-admin-server-ui:1.2.2'
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}
