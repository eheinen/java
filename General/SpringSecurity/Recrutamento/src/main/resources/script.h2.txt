CREATE USER IF NOT EXISTS ROOT SALT 'a79de9ec54987d64' HASH '9647a6df47f6f01adefdf97b2b19bf7a9bc42f2cbb8c9ed4f6612e708d9bc697' ADMIN; 
CREATE SEQUENCE PUBLIC.SYSTEM_SEQUENCE_DFAD0507_457F_408F_A017_69D0FF16790D START WITH 1 BELONGS_TO_TABLE; 
CREATE SEQUENCE PUBLIC.SYSTEM_SEQUENCE_DC9EEABC_5A52_4609_BE1A_C84915E02083 START WITH 16 BELONGS_TO_TABLE; 
CREATE SEQUENCE PUBLIC.SYSTEM_SEQUENCE_440850C6_1F10_4D30_A189_5F1B1344193E START WITH 76 BELONGS_TO_TABLE; 
CREATE CACHED TABLE PUBLIC.CANDIDATE(
    ID VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255),
    LEVEL VARCHAR(255),
    NAME VARCHAR(255)
); 
ALTER TABLE PUBLIC.CANDIDATE ADD CONSTRAINT PUBLIC.CONSTRAINT_C PRIMARY KEY(ID); 
-- 1 +/- SELECT COUNT(*) FROM PUBLIC.CANDIDATE; 
INSERT INTO PUBLIC.CANDIDATE(ID, EMAIL, LEVEL, NAME) VALUES
('402880e7358377150135837794480001', 'fss03@hotmail.com', 'JUNIOR', 'Fabiano Santos da Silva'); 
CREATE CACHED TABLE PUBLIC.EVALUATION(
    ID BIGINT DEFAULT (NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_DFAD0507_457F_408F_A017_69D0FF16790D) NOT NULL NULL_TO_DEFAULT SEQUENCE PUBLIC.SYSTEM_SEQUENCE_DFAD0507_457F_408F_A017_69D0FF16790D,
    CANDIDATE_ID VARCHAR(255)
); 
ALTER TABLE PUBLIC.EVALUATION ADD CONSTRAINT PUBLIC.CONSTRAINT_5 PRIMARY KEY(ID); 
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.EVALUATION; 
CREATE CACHED TABLE PUBLIC.OPTION(
    ID BIGINT DEFAULT (NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_440850C6_1F10_4D30_A189_5F1B1344193E) NOT NULL NULL_TO_DEFAULT SEQUENCE PUBLIC.SYSTEM_SEQUENCE_440850C6_1F10_4D30_A189_5F1B1344193E,
    ANSWER VARCHAR(255),
    CORRECT BOOLEAN DEFAULT FALSE,
    QUESTION_ID BIGINT
); 
ALTER TABLE PUBLIC.OPTION ADD CONSTRAINT PUBLIC.CONSTRAINT_8 PRIMARY KEY(ID); 
-- 75 +/- SELECT COUNT(*) FROM PUBLIC.OPTION; 
INSERT INTO PUBLIC.OPTION(ID, ANSWER, CORRECT, QUESTION_ID) VALUES
(1, 'read', FALSE, 1),
(2, 'relax', FALSE, 1),
(3, 'retrieve', TRUE, 1),
(4, 'rambo', FALSE, 1),
(5, 'richard', FALSE, 1),
(6, 'A', FALSE, 2),
(7, 'B', FALSE, 2),
(8, 'C', TRUE, 2),
(9, 'D', FALSE, 2),
(10, 'E', FALSE, 2),
(11, 'Real Madrid', FALSE, 3),
(12, 'Milan', TRUE, 3),
(13, 'Barcelona', FALSE, 3),
(14, 'Vasco', FALSE, 3),
(15, 'Flamengo', FALSE, 3),
(16, 'Samurai X', FALSE, 4),
(17, 'Buck', FALSE, 4),
(18, 'Dragon Ball', FALSE, 4),
(19, 'Yu Yu Hakusho', TRUE, 4),
(20, 'Naruto', FALSE, 4),
(21, 'Michael Jackson', TRUE, 5),
(22, 'Stevie Wonder', FALSE, 5),
(23, 'Babyface', FALSE, 5),
(24, 'Craig David', FALSE, 5),
(25, 'Justin Bieber', FALSE, 5),
(26, 'Battlefield 3', FALSE, 6),
(27, 'Call Of Duty', FALSE, 6),
(28, 'Crysis', TRUE, 6),
(29, 'Medal Of Honor', FALSE, 6),
(30, 'Bioshock', FALSE, 6),
(31, 'WII', FALSE, 7),
(32, 'XBox 360', FALSE, 7),
(33, 'Playstation 3', FALSE, 7),
(34, 'PS Vita', FALSE, 7),
(35, 'Super NES', TRUE, 7),
(36, 'UFRJ', FALSE, 8),
(37, 'UFF', FALSE, 8),
(38, 'UniRio', FALSE, 8),
(39, 'UERJ', TRUE, 8),
(40, 'Rural', FALSE, 8),
(41, 'Linking Park', FALSE, 9),
(42, 'Nirvana', FALSE, 9),
(43, 'Nickel Back', FALSE, 9),
(44, 'System of a Down', TRUE, 9),
(45, 'Metalica', FALSE, 9),
(46, 'Seya', FALSE, 10),
(47, 'Kenshin', FALSE, 10),
(48, 'Yusuke', TRUE, 10),
(49, 'Naruto', FALSE, 10),
(50, 'L', FALSE, 10),
(51, 'Toshiba', FALSE, 11),
(52, 'Sony', FALSE, 11),
(53, 'Apple', FALSE, 11),
(54, 'Hp', TRUE, 11),
(55, 'Asus', FALSE, 11),
(56, 'Boyz II Men', TRUE, 12),
(57, 'Back Street Boyz', FALSE, 12),
(58, 'Black Street', FALSE, 12),
(59, 'Six', FALSE, 12),
(60, 'NSync', FALSE, 12),
(61, 'Clarck Kent', FALSE, 13),
(62, 'Bruce Wayne', FALSE, 13),
(63, 'Bruce Barner', TRUE, 13),
(64, 'Peter Park', FALSE, 13),
(65, 'Mulher Maravilha', FALSE, 13),
(66, '4', FALSE, 14),
(67, '1', FALSE, 14),
(68, '2', FALSE, 14),
(69, '3', FALSE, 14),
(70, '22', TRUE, 14),
(71, 'Atomos nao morrem', FALSE, 15),
(72, 'Dando um tiro', FALSE, 15),
(73, 'Empurrando de uma ponte de hidrogenio', TRUE, 15),
(74, 'Atomos nao tem vida', FALSE, 15),
(75, 'Que pergunta idiota', FALSE, 15); 
CREATE CACHED TABLE PUBLIC.QUESTION(
    ID BIGINT DEFAULT (NEXT VALUE FOR PUBLIC.SYSTEM_SEQUENCE_DC9EEABC_5A52_4609_BE1A_C84915E02083) NOT NULL NULL_TO_DEFAULT SEQUENCE PUBLIC.SYSTEM_SEQUENCE_DC9EEABC_5A52_4609_BE1A_C84915E02083,
    DESCRIPTION VARCHAR(255),
    LEVEL VARCHAR(255),
    STATUS VARCHAR(255),
    TITLE VARCHAR(255)
); 
ALTER TABLE PUBLIC.QUESTION ADD CONSTRAINT PUBLIC.CONSTRAINT_E PRIMARY KEY(ID); 
-- 15 +/- SELECT COUNT(*) FROM PUBLIC.QUESTION; 
INSERT INTO PUBLIC.QUESTION(ID, DESCRIPTION, LEVEL, STATUS, TITLE) VALUES
(1, 'O que siginifica o R na sigla CRUD ?', 'JUNIOR', 'ACTIVE', 'CRUD'),
(2, 'ABC ?', 'JUNIOR', 'ACTIVE', 'ABC'),
(3, 'Qual o melhor time de futebol do mundo ?', 'JUNIOR', 'ACTIVE', 'FUTEBOL'),
(4, 'Qual o melhor anime ja criado ?', 'JUNIOR', 'ACTIVE', 'ANIME'),
(5, 'Qual o melhor cantor/artista que o mundo  ja conheceu ?', 'JUNIOR', 'ACTIVE', 'MUSICA'),
(6, 'Qual o melhor game ?', 'JUNIOR', 'ACTIVE', 'GAMES'),
(7, 'Qual o melhor dentre os consoles ?', 'JUNIOR', 'ACTIVE', 'GAMES'),
(8, 'Qual a melhor universidade ?', 'JUNIOR', 'ACTIVE', 'ACADEMICA'),
(9, 'Qual a melhor banda de Rock ?', 'JUNIOR', 'ACTIVE', 'MUSICA'),
(10, 'Qual o personagem mais carismatico ?', 'JUNIOR', 'ACTIVE', 'ANIME'),
(11, 'Qual a melhor empresa em criacao de notebooks ?', 'JUNIOR', 'ACTIVE', 'INFORMATICA'),
(12, 'Qual a melhor banda Black Music ?', 'JUNIOR', 'ACTIVE', 'MUSICA'),
(13, 'Qual o verdadeiro nome do Hulk ?', 'JUNIOR', 'ACTIVE', 'CONHECIMENTO GERAL'),
(14, 'Quanto e "2" + "2" ?', 'JUNIOR', 'ACTIVE', 'CONHECIMENTO GERAL'),
(15, 'Como se mata um Aomo ?', 'JUNIOR', 'ACTIVE', 'CONHECIMENTO GERAL'); 
CREATE CACHED TABLE PUBLIC.EVALUATION_QUESTION(
    EVALUATION_ID BIGINT NOT NULL,
    QUESTION_ID BIGINT NOT NULL
); 
-- 0 +/- SELECT COUNT(*) FROM PUBLIC.EVALUATION_QUESTION; 
ALTER TABLE PUBLIC.EVALUATION_QUESTION ADD CONSTRAINT PUBLIC.FKA189C9892D39AC70 FOREIGN KEY(EVALUATION_ID) REFERENCES PUBLIC.EVALUATION(ID) NOCHECK; 
ALTER TABLE PUBLIC.EVALUATION ADD CONSTRAINT PUBLIC.FKA9FDE35CC542BE4 FOREIGN KEY(CANDIDATE_ID) REFERENCES PUBLIC.CANDIDATE(ID) NOCHECK; 
ALTER TABLE PUBLIC.OPTION ADD CONSTRAINT PUBLIC.FK8D2F7495863E09B0 FOREIGN KEY(QUESTION_ID) REFERENCES PUBLIC.QUESTION(ID) NOCHECK; 
ALTER TABLE PUBLIC.EVALUATION_QUESTION ADD CONSTRAINT PUBLIC.FKA189C989863E09B0 FOREIGN KEY(QUESTION_ID) REFERENCES PUBLIC.QUESTION(ID) NOCHECK; 
